@model IEnumerable<_2211_Final_Project_TGM_Blog.Models.Blog.BlogPost>
@inject UserManager<IdentityUser> UserManager
@inject LikeService likeService
@{
    var currentUser = UserManager.GetUserAsync(User).Result;
    bool isDev = currentUser != null && UserManager.IsInRoleAsync(currentUser, "Dev").Result;
    bool isAuthenticated = User.Identity.IsAuthenticated;
}

<h2 class="display-4 mb-2 text-center">Blog Posts</h2>

<div class="d-flex flex-column align-items-center justify-content-center mb-2">
    @if (isDev)
    {
        <a asp-controller="Blog" asp-action="CreateBlogPost" class="btn btn-primary col-sm-2">
            Create Blog Post
        </a>
        <form asp-action="MakeUserDev" asp-route-userId="@currentUser.Id" method="post" class="likeBtn">
            <button type="submit" class="btn btn-primary col-sm-10">
                Revert to User Role
            </button>
        </form>
    }
    else if (isAuthenticated)
    {
        <p class="text-center">Unauthorized.</p>
        <form asp-action="MakeUserDev" asp-route-userId="@currentUser.Id" method="post" class="likeBtn">
            <button type="submit" class="btn btn-primary col-sm-10">
                Get Dev Role
            </button>
        </form>
    }
</div>

@if (Model.Any())
{
    <div class="d-flex flex-column align-items-center justify-content-center mb-2">
        @foreach (var post in Model.Reverse())
        {
            <div class="card mb-2 col-lg-12">
                <div class="card-body d-flex flex-column align-items-center justify-content-center">
                    <h5 class="card-title">@post.Title</h5>
                    <p class="card-text">@post.Content</p>
                    <div class="likes-section mb-2 text-muted">
                        @if (await likeService.HasLikes(post.Id))
                        {
                            <h6 class="card-subtitle">Likes: @await likeService.GetLikes(post.Id)</h6>
                        }
                        else
                        {
                            <h6 class="card-subtitle">No likes.</h6>
                        }
                    </div>
                    @if (isAuthenticated)
                    {
                        bool userLikedPost = await likeService.HasUserLikedPost(post.Id, currentUser.Id);

                        <div id="likeBtnSection">
                            @if (userLikedPost)
                            {
                                var likeId = await likeService.GetLikeId(post.Id, currentUser.Id);

                                <form asp-action="Unlike" asp-route-likeId="@likeId" method="post" class="likeBtn">
                                    <button type="submit" class="btn btn-primary">
                                        Like
                                    </button>
                                </form>
                            }
                            else
                            {
                                <form asp-action="Like" asp-route-postId="@post.Id" method="post" class="likeBtn">
                                    <button type="submit" class="btn btn-outline-primary">
                                        Like
                                    </button>
                                </form>
                            }
                        </div>
                    }
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No blog posts available.</p>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () 
    {
        //jquery function that handles the like/unlike button events
        $('.likeBtn').click(function (e) 
        {
            e.preventDefault();
            var form = $(this).closest('form');
            $.ajax(
                {
                type: form.attr('method'),
                url: form.attr('action'),
                data: form.serialize(),
                success: function (response) 
                {
                    // Update the likes section with the updated count
                    var likesSection = form.closest('.card-body').find('.likes-section');
                    if (response.likesCount > 0) { likesSection.html('Likes: ' + response.likesCount); }
                        else { likesSection.html('No likes.'; }
                },
                error: function () 
                {
                    alert('An error occurred. Please try again.');
                }
            });
        });
    });
</script>