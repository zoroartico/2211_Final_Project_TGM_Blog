@model _2211_Final_Project_TGM_Blog.Models.SupportChat.Chat
@{
    var currentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
}

<h2>Chat Details</h2>

<div id="messagesContainer" class="messages">
    @foreach (var message in Model.Messages.OrderBy(m => m.TimeSent))
    {
        <div class="@("message " + (message.SenderUserId == currentUserId ? "current-user" : "other-user"))">
            <div class="message-content">@message.Content</div>
            <small>@message.TimeSent.ToString("g")</small>
        </div>
    }
</div>

<form asp-controller="Message" asp-action="Send" method="post">
    <input type="hidden" name="ChatId" value="@Model.Id" />
    <div class="form-group">
        <label for="messageContent">Message:</label>
        <textarea id="messageContent" name="Content" class="form-control"></textarea>
    </div>
    <button type="submit" class="btn btn-danger">Send</button>
</form>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        setInterval(function () {
            refreshMessages();
        }, 5000); // Refresh every 5000 milliseconds (5 seconds)
    });

    function refreshMessages() {
        $.ajax({
            url: '@Url.Action("GetMessages", "Chat", new { id = Model.Id })', // Make sure this URL is correct
            type: 'GET',
            success: function (data) {
                var messagesHtml = '';
                for (var i = 0; i < data.length; i++) {
                    var message = data[i];
                    // Determine message class based on sender user ID
                    var messageClass = message.senderUserId === '@currentUserId' ? 'message current-user' : 'message other-user';
                    // Build the message HTML structure
                    messagesHtml += '<div class="' + messageClass + '">';
                    messagesHtml += '<div class="message-content">' + message.content + '</div>';
                    messagesHtml += '<small>' + new Date(message.timeSent).toLocaleString() + '</small>';
                    messagesHtml += '</div>';
                }
                $('#messagesContainer').html(messagesHtml);
            }
        });
    }
</script>

<style>
    .messages {
        display: flex;
        flex-direction: column;
        margin-bottom: 20px;
    }

    .message {
        display: flex;
        flex-direction: column;
        margin-bottom: 10px;
        padding: 10px;
        word-wrap: break-word;
        border-radius: 10px;
        max-width: 70%;
        border: 1px solid black;
    }

    .current-user {
        align-self: flex-end;
        background-color: #007bff;
        color: white;
        border-top-right-radius: 0;
    }

    .other-user {
        align-self: flex-start;
        background-color #f0f0f0;
        color: black;
        border-top-left-radius: 0;
    }

    .message-content {
        word-break: break-word;
    }

    .form-group {
        margin-top: 20px;
    }
</style>